<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>haocaiMP的博客</title>
  
  <subtitle>记录成长，记录生活</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://haocaiMP.github.io/blog/"/>
  <updated>2019-06-05T02:10:49.788Z</updated>
  <id>http://haocaiMP.github.io/blog/</id>
  
  <author>
    <name>haocaiMP</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>React.js</title>
    <link href="http://haocaiMP.github.io/blog/2019/06/06/react/"/>
    <id>http://haocaiMP.github.io/blog/2019/06/06/react/</id>
    <published>2019-06-06T09:50:00.000Z</published>
    <updated>2019-06-05T02:10:49.788Z</updated>
    
    <content type="html"><![CDATA[<h2 id="敬请期待"><a href="#敬请期待" class="headerlink" title="敬请期待"></a>敬请期待</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;敬请期待&quot;&gt;&lt;a href=&quot;#敬请期待&quot; class=&quot;headerlink&quot; title=&quot;敬请期待&quot;&gt;&lt;/a&gt;敬请期待&lt;/h2&gt;
      
    
    </summary>
    
    
      <category term="React.js" scheme="http://haocaiMP.github.io/blog/tags/React-js/"/>
    
  </entry>
  
  <entry>
    <title>自用方法汇总</title>
    <link href="http://haocaiMP.github.io/blog/2019/06/05/common/"/>
    <id>http://haocaiMP.github.io/blog/2019/06/05/common/</id>
    <published>2019-06-05T09:07:10.000Z</published>
    <updated>2019-06-05T02:10:01.604Z</updated>
    
    <content type="html"><![CDATA[<h3 id="移除类"><a href="#移除类" class="headerlink" title="移除类"></a>移除类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function removeClass(el, cls) &#123;</span><br><span class="line">    el.className = el.className.replace(new RegExp(&quot;(?:^|\\s)&quot; + cls + &quot;(?:\\s|$)&quot;, &quot;ig&quot;), &quot; &quot;).trim();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="添加类"><a href="#添加类" class="headerlink" title="添加类"></a>添加类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function addClass(el, cls) &#123;</span><br><span class="line">    var reg = new RegExp(&quot;(?:^|\\s)&quot; + cls + &quot;(?:\\s|$)&quot;);</span><br><span class="line">    var ocls = el.className;</span><br><span class="line">    if (!reg.test(ocls)) &#123;</span><br><span class="line">        el.className = ocls + &quot; &quot; + cls;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="是否含有此类"><a href="#是否含有此类" class="headerlink" title="是否含有此类"></a>是否含有此类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">function hasClass(el, cls) &#123;</span><br><span class="line">    if (el.classList) &#123;</span><br><span class="line">        return el.classList.contains(cls)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        var clss = el.className.split(/\s+/)</span><br><span class="line">        return clss.indexOf(cls) &gt; -1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="时间戳转换"><a href="#时间戳转换" class="headerlink" title="时间戳转换"></a>时间戳转换</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function zhuhuan(day) &#123;</span><br><span class="line">    re = /(\d&#123;4&#125;)(?:-(\d&#123;1,2&#125;)(?:-(\d&#123;1,2&#125;))?)?(?:\s+(\d&#123;1,2&#125;):(\d&#123;1,2&#125;):(\d&#123;1,2&#125;))?/.exec(day);</span><br><span class="line">    return new Date(re[1], (re[2] || 1) - 1, re[3] || 1, re[4] || 0, re[5] || 0, re[6] || 0).getTime();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="获取滚动高度"><a href="#获取滚动高度" class="headerlink" title="获取滚动高度"></a>获取滚动高度</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function getScrollTop() &#123;</span><br><span class="line">    var scrollTop = 0;</span><br><span class="line">    if (document.documentElement &amp;&amp; document.documentElement.scrollTop) &#123;</span><br><span class="line">        scrollTop = document.documentElement.scrollTop;</span><br><span class="line">    &#125; else if (document.body) &#123;</span><br><span class="line">        scrollTop = document.body.scrollTop;</span><br><span class="line">    &#125;</span><br><span class="line">    return scrollTop;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="数组求和"><a href="#数组求和" class="headerlink" title="数组求和"></a>数组求和</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function sum(...x) &#123;</span><br><span class="line">    return x.reduce((m, n) =&gt; m + n);</span><br><span class="line">&#125;</span><br><span class="line">//or </span><br><span class="line">eval(arr.join(&apos;+&apos;));</span><br></pre></td></tr></table></figure><h3 id="add-相加"><a href="#add-相加" class="headerlink" title="add 相加"></a>add 相加</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">let add = (...a) =&gt; &#123;</span><br><span class="line">    let helper = (...b) =&gt; &#123;</span><br><span class="line">        return add(...[...a, ...b]);</span><br><span class="line">    &#125;;</span><br><span class="line">    helper.toString = helper.valueOf = () =&gt; &#123;</span><br><span class="line">        let sum = 0;</span><br><span class="line">        for (let item of a) sum += item;</span><br><span class="line">        return sum;</span><br><span class="line">    &#125;;</span><br><span class="line">    return helper;</span><br><span class="line">&#125;;</span><br><span class="line">alert(add(1)(2)) // 3</span><br><span class="line">alert(add(1, 2, 3)(10)) // 16</span><br><span class="line">alert(add(1)(2)(3)(4)(5)) // 15</span><br><span class="line">alert(add(1)(2, 3)(4, 5)) // 15</span><br></pre></td></tr></table></figure><h3 id="去重-可参考上一章-数组去重"><a href="#去重-可参考上一章-数组去重" class="headerlink" title="去重 (可参考上一章 数组去重)"></a>去重 (可参考上一章 <a href="https://haocaimp.github.io/blog/2019/05/30/array%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/">数组去重</a>)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Array.from(new Set(arr));</span><br><span class="line">//or</span><br><span class="line">function unique(a) &#123;</span><br><span class="line">    var res = a.filter(function(item, index, array) &#123;</span><br><span class="line">        return array.indexOf(item) === index;</span><br><span class="line">    &#125;);</span><br><span class="line">    return res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串倒排"><a href="#字符串倒排" class="headerlink" title="字符串倒排"></a>字符串倒排</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.split(&quot;&quot;).reverse().join(&quot;&quot;);</span><br></pre></td></tr></table></figure><h3 id="快排"><a href="#快排" class="headerlink" title="快排"></a>快排</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">function quickSort(arr) &#123;</span><br><span class="line">    if (arr.length &lt;= 1) &#123;</span><br><span class="line">        return arr;</span><br><span class="line">    &#125;</span><br><span class="line">    var num = Math.floor(arr.length / 2);</span><br><span class="line">    var numValue = arr.splice(num, 1);</span><br><span class="line">    console.log(numValue, &apos;111&apos;)</span><br><span class="line">    var left = [],</span><br><span class="line">        right = [];</span><br><span class="line">    for (var i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">        if (arr[i] &lt; numValue) &#123;</span><br><span class="line">            left.push(arr[i])</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            right.push(arr[i])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return quickSort(left).concat(numValue, quickSort(right)); //递归不断重复比较</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="生成从minNum到maxNum的随机数"><a href="#生成从minNum到maxNum的随机数" class="headerlink" title="生成从minNum到maxNum的随机数"></a>生成从minNum到maxNum的随机数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function randomNum(minNum, maxNum) &#123;</span><br><span class="line">    switch (arguments.length) &#123;</span><br><span class="line">        case 1:</span><br><span class="line">            return parseInt(Math.random() * minNum + 1, 10);</span><br><span class="line">            break;</span><br><span class="line">        case 2:</span><br><span class="line">            return parseInt(Math.random() * (maxNum - minNum + 1) + minNum, 10);</span><br><span class="line">            break;</span><br><span class="line">        default:</span><br><span class="line">            return 0;</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="随机排序"><a href="#随机排序" class="headerlink" title="随机排序"></a>随机排序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">//推荐使用</span><br><span class="line">function shuffle(arr) &#123;</span><br><span class="line">    var len = arr.length;</span><br><span class="line">    for (var i = 0; i &lt; len - 1; i++) &#123;</span><br><span class="line">        var idx = Math.floor(Math.random() * (len - i));</span><br><span class="line">        var temp = arr[idx];</span><br><span class="line">        arr[idx] = arr[len - i - 1];</span><br><span class="line">        arr[len - i - 1] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    return arr;</span><br><span class="line">&#125;</span><br><span class="line">//or 完全打乱度不高</span><br><span class="line">arr.sort(() =&gt; &#123;</span><br><span class="line">    return Math.random() &gt;= 0.5 ? 1 : -1;</span><br><span class="line">&#125;);</span><br><span class="line">//or</span><br><span class="line">function randArray(data) &#123;</span><br><span class="line">    //获取数组长度</span><br><span class="line">    var arrlen = data.length;</span><br><span class="line">    //创建数组 存放下标数</span><br><span class="line">    var try1 = new Array();</span><br><span class="line">    for (var i = 0; i &lt; arrlen; i++) &#123;</span><br><span class="line">        try1[i] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    //创建数组 生成随机下标数</span><br><span class="line">    var try2 = new Array();</span><br><span class="line">    for (var i = 0; i &lt; arrlen; i++) &#123;</span><br><span class="line">        try2[i] = try1.splice(Math.floor(Math.random() * try1.length), 1);</span><br><span class="line">    &#125;</span><br><span class="line">    //创建数组，生成对应随机下标数的数组</span><br><span class="line">    var try3 = new Array();</span><br><span class="line">    for (var i = 0; i &lt; arrlen; i++) &#123;</span><br><span class="line">        try3[i] = data[try2[i]];</span><br><span class="line">    &#125;</span><br><span class="line">    return try3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="判断属性存在原型还是实例上"><a href="#判断属性存在原型还是实例上" class="headerlink" title="判断属性存在原型还是实例上"></a>判断属性存在原型还是实例上</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function hasPrototypeProperty(obj, name) &#123;</span><br><span class="line">    return !obj.hasOwnProperty(name) &amp;&amp; (name in obj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="判断是否是移动端"><a href="#判断是否是移动端" class="headerlink" title="判断是否是移动端"></a>判断是否是移动端</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function isPc() &#123;</span><br><span class="line">    var ua = navigator.userAgent;</span><br><span class="line">    if ((ua.match(/(Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone)/i))) &#123;</span><br><span class="line">        if (/iPhone|iPad|iPod/.test(ua)) &#123;</span><br><span class="line">            return &apos;ios&apos;</span><br><span class="line">        &#125; else if (/Android/.test(ua)) &#123;</span><br><span class="line">            return &apos;android&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        return &apos;PC&apos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="检测插件（不支持IE）"><a href="#检测插件（不支持IE）" class="headerlink" title="检测插件（不支持IE）"></a>检测插件（不支持IE）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">function hasPlugin(name) &#123;</span><br><span class="line">    name = name.toLowerCase();</span><br><span class="line">    for (let i = 0; i &lt; navigator.plugins.length; i++) &#123;</span><br><span class="line">        if (navigator.plugins[i].name.toLowerCase().indexOf(name) &gt; -1) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br><span class="line">//仅支持IE</span><br><span class="line">function hasIEPlugin(name) &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        new ActiveXObject(name);</span><br><span class="line">        return true;</span><br><span class="line">    &#125; catch (ex) &#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="NodeList转化为数组"><a href="#NodeList转化为数组" class="headerlink" title="NodeList转化为数组"></a>NodeList转化为数组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function convertToArray(nodes) &#123;</span><br><span class="line">    var array = null;</span><br><span class="line">    try &#123;</span><br><span class="line">        array = Array.prototype.slice.call(nodes, 0); //针对非IE浏览器</span><br><span class="line">    &#125; catch (ex) &#123;</span><br><span class="line">        array = new Array();</span><br><span class="line">        for (var i = 0, len = nodes.length; i &lt; len; i++) &#123;</span><br><span class="line">            array.push(nodes[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return array;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="事件监听程序及移除"><a href="#事件监听程序及移除" class="headerlink" title="事件监听程序及移除"></a>事件监听程序及移除</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">var EventUtil = &#123;</span><br><span class="line">    addHandler: function(ele, type, handler) &#123;</span><br><span class="line">        if (ele.addEventListener) &#123;</span><br><span class="line">            ele.addEventListener(type, handler, false);</span><br><span class="line">        &#125; else if (ele.attachEvent) &#123;</span><br><span class="line">            ele.attachEvent(&quot;on&quot; + type, handler);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            ele[&quot;on&quot; + type] = handler;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    removeHandler: function(ele, type, handler) &#123;</span><br><span class="line">        if (ele.removeEventListener) &#123;</span><br><span class="line">            ele.removeEventListener(type, handler, false);</span><br><span class="line">        &#125; else if (ele.detachEvent) &#123;</span><br><span class="line">            ele.detachEvent(&quot;on&quot; + type, handler);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            ele[&quot;on&quot; + type] = null;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="获取总的字节数"><a href="#获取总的字节数" class="headerlink" title="获取总的字节数"></a>获取总的字节数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function strNum(val) &#123;</span><br><span class="line">    var len = 0;</span><br><span class="line">    for (var i = 0, ll = val.length; i &lt; ll; i++) &#123;</span><br><span class="line">        if (val[i].match(/[^\x00-\xff]/ig) != null) &#123;</span><br><span class="line">            len += 2;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            len += 1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return len;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符过滤–过滤特殊字符"><a href="#字符过滤–过滤特殊字符" class="headerlink" title="字符过滤–过滤特殊字符"></a>字符过滤–过滤特殊字符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function filterCode(str) &#123;</span><br><span class="line">    //过滤中英文单双引号以及空格(\s)</span><br><span class="line">    var reg = /\\+|\~+|\!+|\@+|\#+|¥+|\￥+|\%+|\^+|\&amp;+|\*+|\(+|\)+|\&apos;+|(\&quot;)+|\$+|`+|\“+|\”+|\‘+|\’+|\s+/g;</span><br><span class="line">    var res = str.replace(reg, &quot;&quot;);</span><br><span class="line">    return res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="由经纬度获取两点间的距离km"><a href="#由经纬度获取两点间的距离km" class="headerlink" title="由经纬度获取两点间的距离km"></a>由经纬度获取两点间的距离km</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">function calculate(start, end) &#123;</span><br><span class="line">    //start 起点经纬度,数据格式 start = &#123;lon:,lat:&#125;</span><br><span class="line">    //end 终点定位度,数据格式 end = &#123;lon:,lat:&#125;</span><br><span class="line">    if (start.lon != null &amp;&amp; start.lat != null &amp;&amp; end.lon != null &amp;&amp; end.lat != null) &#123;</span><br><span class="line">        function rad(d) &#123;</span><br><span class="line">            return d * Math.PI / 180.0;</span><br><span class="line">        &#125;</span><br><span class="line">        var slon = start.lon / 3600000;</span><br><span class="line">        var slat = start.lat / 3600000;</span><br><span class="line">        var elon = end.lon / 3600000;</span><br><span class="line">        var elat = end.lat / 3600000;</span><br><span class="line">        //赤道半径</span><br><span class="line">        var EARTH_RADIUS = 6378137;</span><br><span class="line">        var radLat1 = rad(slat);</span><br><span class="line">        var radLat2 = rad(elat);</span><br><span class="line">        var a = radLat1 - radLat2;</span><br><span class="line">        var b = rad(slon) - rad(elon);</span><br><span class="line">        var s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a / 2), 2) + Math.cos(radLat1) * Math.cos(radLat2) * Math.pow(Math.sin(b / 2), 2)));</span><br><span class="line">        s = s * EARTH_RADIUS;</span><br><span class="line">        //返回公里km</span><br><span class="line">        var kilometer = Math.round(s * 10000) / 10000000;</span><br><span class="line">        var kl = kilometer + &quot;&quot;;</span><br><span class="line">        if (kl.length &gt; 4) &#123;</span><br><span class="line">            //保留两位小数</span><br><span class="line">            return kilometer.toFixed(2);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return kilometer;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return &quot;&quot;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="屏蔽刷F5、屏蔽鼠标右键"><a href="#屏蔽刷F5、屏蔽鼠标右键" class="headerlink" title="屏蔽刷F5、屏蔽鼠标右键"></a>屏蔽刷F5、屏蔽鼠标右键</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// F5</span><br><span class="line">document.onkeydown = function(e) &#123;</span><br><span class="line">    var ev = window.event || e;</span><br><span class="line">    var code = ev.keyCode || ev.which;</span><br><span class="line">    if (code == 116) &#123;</span><br><span class="line">        ev.keyCode ? ev.keyCode = 0 : ev.which = 0;</span><br><span class="line">        cancelBubble = true;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">// 右键</span><br><span class="line">document.body.oncontextmenu = function() &#123;</span><br><span class="line">    return false;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="判断对象是否为数组"><a href="#判断对象是否为数组" class="headerlink" title="判断对象是否为数组"></a>判断对象是否为数组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function isArray(arg) &#123;</span><br><span class="line">    if (typeof arg === &apos;object&apos;) &#123;</span><br><span class="line">        return Object.prototype.toString.call(arg) === &apos;[object Array]&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="验证邮箱"><a href="#验证邮箱" class="headerlink" title="验证邮箱"></a>验证邮箱</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function checkMail(str) &#123;</span><br><span class="line">    var reg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\.[a-zA-Z0-9_-]&#123;2,3&#125;)&#123;1,2&#125;)$/;</span><br><span class="line">    return reg.test(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="转换为驼峰命名格式如：toUpper-‘web-kit-index’"><a href="#转换为驼峰命名格式如：toUpper-‘web-kit-index’" class="headerlink" title="转换为驼峰命名格式如：toUpper(‘web kit index’)"></a>转换为驼峰命名格式如：toUpper(‘web kit index’)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function toUpper(str) &#123;</span><br><span class="line">    var reg = /\s+(\w)/g;</span><br><span class="line">    return str.replace(reg, function(a, b) &#123;</span><br><span class="line">        return b.toUpperCase();</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="随机色值"><a href="#随机色值" class="headerlink" title="随机色值"></a>随机色值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(~~(Math.random() * (1 &lt;&lt; 24))).toString(16)</span><br></pre></td></tr></table></figure><h3 id="控制节流"><a href="#控制节流" class="headerlink" title="控制节流"></a>控制节流</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">function throttle(method, context) &#123;</span><br><span class="line">    clearTimeout(method.tId);</span><br><span class="line">    method.tId = setTimeout(function() &#123;</span><br><span class="line">        method.call(context);</span><br><span class="line">    &#125;, 5000);</span><br><span class="line">&#125;</span><br><span class="line">//or</span><br><span class="line">var throttle = function(fn, interval) &#123;</span><br><span class="line">    var _self = fn, //保存需要被延迟执行的函数引用</span><br><span class="line">        timer, //定时器</span><br><span class="line">        firstTime = true; //是否是第一次调用</span><br><span class="line">    return function() &#123;</span><br><span class="line">        var args = arguments,</span><br><span class="line">            _me = this;</span><br><span class="line">        if (firstTime) &#123; //如果是第一次调用，不需延迟执行</span><br><span class="line">            _self.apply(_me, args);</span><br><span class="line">            return firstTime = false;</span><br><span class="line">        &#125;</span><br><span class="line">        if (timer) &#123; //如果定时器还在，说明上一次延迟执行还没有完成</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        timer = setTimeout(function() &#123; //延迟一段时间执行</span><br><span class="line">            clearTimeout(timer);</span><br><span class="line">            timer = null;</span><br><span class="line">            _self.apply(_me, args);</span><br><span class="line">        &#125;, interval || 500)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="格式化时间戳"><a href="#格式化时间戳" class="headerlink" title="格式化时间戳"></a>格式化时间戳</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">function formatDate(time) &#123;</span><br><span class="line">    var now = new Date(time);</span><br><span class="line">    var year = now.getFullYear();</span><br><span class="line">    var month = now.getMonth() + 1;</span><br><span class="line">    var date = now.getDate();</span><br><span class="line">    var hour = now.getHours();</span><br><span class="line">    var minute = now.getMinutes();</span><br><span class="line">    var second = now.getSeconds();</span><br><span class="line">    return year + &quot;-&quot; + month + &quot;-&quot; + date + &quot; &quot; + dateLang(hour) + &quot;:&quot; + dateLang(minute) + &quot;:&quot; + dateLang(second);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function dateLang(s) &#123;</span><br><span class="line">    return s &lt; 10 ? &apos;0&apos; + s : s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取地址参数"><a href="#获取地址参数" class="headerlink" title="获取地址参数"></a>获取地址参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function getUrlParam(name) &#123;</span><br><span class="line">    var reg = new RegExp(&quot;(^|&amp;)&quot; + name + &quot;=([^&amp;]*)(&amp;|$)&quot;);</span><br><span class="line">    var r = window.location.search.substr(1).match(reg);</span><br><span class="line">    if (r != null) return unescape(r[2]);</span><br><span class="line">    return null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="一个格式化货币-千位符的js函数"><a href="#一个格式化货币-千位符的js函数" class="headerlink" title="一个格式化货币/千位符的js函数"></a>一个格式化货币/千位符的js函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function toMoney(num) &#123;</span><br><span class="line">    //先把字符串里面除了数字跟.以外的字符去掉</span><br><span class="line">    let replacenum = num.replace(/[^\d\.]/g, &apos;&apos;)</span><br><span class="line">    //把得到的字符串转换成带2位小数的浮点数</span><br><span class="line">    let fixednum = parseFloat(replacenum).toFixed(2)</span><br><span class="line">    //把浮点数拆分成整数和小数2部分</span><br><span class="line">    let apartnum = String(fixednum).split(&apos;.&apos;)</span><br><span class="line">    //把整数部分用toLocaleString方法自动格式化成有千位符的字符串</span><br><span class="line">    let localnum = parseInt(apartnum[0]).toLocaleString()</span><br><span class="line">    //最后 把千位符的字符串 加上小数点 和小数部分 得到完整的结果</span><br><span class="line">    let result = localnum + &apos;.&apos; + apartnum[1]</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="String的金额的转换，转成每3个一个逗号的那个"><a href="#String的金额的转换，转成每3个一个逗号的那个" class="headerlink" title="String的金额的转换，转成每3个一个逗号的那个"></a>String的金额的转换，转成每3个一个逗号的那个</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">function cut1(str) &#123;</span><br><span class="line">    var n;</span><br><span class="line">    var str3 = &apos;&apos;;</span><br><span class="line">    if (str.indexOf(&apos;.&apos;) == -1) &#123;</span><br><span class="line">        n = str.length % 3;</span><br><span class="line">        if (n) &#123;</span><br><span class="line">            str3 = str.slice(0, n) + str.slice(n).replace(/(\d&#123;3&#125;)/g, &apos;,$1&apos;)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            str3 = str.replace(/(\d&#123;3&#125;)/g, &apos;,$1&apos;).slice(1)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        var str2 = str.split(&apos;.&apos;)[0];</span><br><span class="line">        n = str2.length % 3;</span><br><span class="line">        if (n) &#123;</span><br><span class="line">            str3 = str2.slice(0, n) + str2.slice(n).replace(/(\d&#123;3&#125;)/g, &apos;,$1&apos;)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            str3 = str2.replace(/(\d&#123;3&#125;)/g, &apos;,$1&apos;).slice(1)</span><br><span class="line">        &#125;</span><br><span class="line">        str3 = str3 + &apos;.&apos; + str.split(&apos;.&apos;)[1];</span><br><span class="line">    &#125;</span><br><span class="line">    return str3;</span><br><span class="line">&#125;;</span><br><span class="line">//or</span><br><span class="line">function cut2(str) &#123;</span><br><span class="line">    var len = str.length,</span><br><span class="line">        str2 = &apos;&apos;,</span><br><span class="line">        max = Math.floor(len / 3);</span><br><span class="line">    for (var i = 0; i &lt; max; i++) &#123;</span><br><span class="line">        var s = str.slice(len - 3, len);</span><br><span class="line">        str = str.substr(0, len - 3);</span><br><span class="line">        str2 = (&apos;,&apos; + s) + str2;</span><br><span class="line">        len = str.length;</span><br><span class="line">    &#125;</span><br><span class="line">    str += str2;</span><br><span class="line">    return str</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="耗时检测"><a href="#耗时检测" class="headerlink" title="耗时检测"></a>耗时检测</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">var testFun = function(callback, str) &#123;</span><br><span class="line">    var tipElem = document.createElement(&apos;div&apos;),</span><br><span class="line">        startTime,</span><br><span class="line">        duration = 0;</span><br><span class="line">    for (var j = 5; j &gt; 0; j--) &#123;</span><br><span class="line">        startTime = +new Date();</span><br><span class="line">        for (var i = 10000; i &gt; 0; i--) &#123;</span><br><span class="line">            callback();</span><br><span class="line">        &#125;</span><br><span class="line">        duration = ((+new Date()) - startTime) + duration;</span><br><span class="line">    &#125;</span><br><span class="line">    duration = (duration / 5).toFixed(0);</span><br><span class="line">    tipElem.innerHTML = str + &apos;总耗时：&apos; + duration + &apos; ms&apos;;</span><br><span class="line">    document.body.appendChild(tipElem);</span><br><span class="line">&#125;;</span><br><span class="line">testFun(function() &#123;</span><br><span class="line">    func(&apos;1123456789&apos;);</span><br><span class="line">&#125;, &apos;方法1&apos;);</span><br></pre></td></tr></table></figure><h2 id="多维数组转化为一维"><a href="#多维数组转化为一维" class="headerlink" title="多维数组转化为一维"></a>多维数组转化为一维</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">// 递归方法</span><br><span class="line">function flat(array) &#123;</span><br><span class="line">    var result = [];</span><br><span class="line">    let each = function(arr) &#123;</span><br><span class="line">        arr.forEach(item=&gt; &#123;</span><br><span class="line">            if(item instanceof Array) &#123;</span><br><span class="line">                each(item);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                result.push(item)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    each(array);</span><br><span class="line">    return eval(result.join(&apos;,&apos;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 原型方法改造（不影响数组原本方法使用）</span><br><span class="line">var flat = function(arr) &#123;</span><br><span class="line">    let toString = Array.prototype.toString;</span><br><span class="line">    Array.prototype.toString = function() &#123;</span><br><span class="line">        return this.join(&apos;,&apos;);</span><br><span class="line">    &#125;;</span><br><span class="line">    let result = arr + &apos;&apos;;</span><br><span class="line">    Array.prototype.toString = toString; // 重新赋值原型方法</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line">var arr = [&apos;a&apos;,[&apos;b&apos;,&apos;c&apos;],2,[&apos;c&apos;,&apos;d&apos;],3,4,&apos;g&apos;];</span><br><span class="line">console.log(flat(arr));//a,b,c,2,c,d,3,4,g</span><br></pre></td></tr></table></figure><h3 id="fetch-封装"><a href="#fetch-封装" class="headerlink" title="fetch 封装"></a>fetch 封装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">var $requst = function (url, options) &#123;</span><br><span class="line">    var myHeaders = &#123;</span><br><span class="line">        &apos;Content-Type&apos;: &apos;text/html; charset=utf-8&apos;</span><br><span class="line">    &#125;;</span><br><span class="line">    var init = &#123;</span><br><span class="line">        credentials: &apos;include&apos;,</span><br><span class="line">        method: (options &amp;&amp; options.method) || &apos;GET&apos;,</span><br><span class="line">        headers: (options &amp;&amp; options.headers) || myHeaders,</span><br><span class="line">        cache: (options &amp;&amp; options.cache) || &apos;default&apos;</span><br><span class="line">    &#125;</span><br><span class="line">    if (options &amp;&amp; options.body) &#123;</span><br><span class="line">        init.body = JSON.stringify(options.body)</span><br><span class="line">    &#125;</span><br><span class="line">    return fetch(url, init)</span><br><span class="line">        .then(function (response) &#123;</span><br><span class="line">            if (response.ok) &#123;</span><br><span class="line">                return _returnContentByType(response);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                if (options &amp;&amp; options.catchs) &#123;</span><br><span class="line">                    throw new Error(response.statusText);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    var error = new Error(response.statusText);</span><br><span class="line">                    throw new Error(&apos;&apos;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">/**</span><br><span class="line">* 根据type返回不同格式的response</span><br><span class="line">*/</span><br><span class="line">var _returnContentByType = function (response) &#123;</span><br><span class="line">    var type = response.headers.get(&apos;Content-Type&apos;).split(&quot;;&quot;)[0];</span><br><span class="line">    switch (type) &#123;</span><br><span class="line">        case &apos;text/html&apos;:</span><br><span class="line">            return response.text();</span><br><span class="line">            break</span><br><span class="line">        case &apos;application/json&apos;:</span><br><span class="line">            return response.json();</span><br><span class="line">            break</span><br><span class="line">        default:</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="数组中存在最多的元素及个数"><a href="#数组中存在最多的元素及个数" class="headerlink" title="数组中存在最多的元素及个数"></a>数组中存在最多的元素及个数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function search(arr) &#123;</span><br><span class="line">    var maxCount = 0,</span><br><span class="line">        maxItem = &apos;&apos;,</span><br><span class="line">        obj = &#123;&#125;</span><br><span class="line">    arr.forEach(function (item) &#123;</span><br><span class="line">        obj[item] ? (obj[item].count += 1) : obj[item] = &#123; count: 1 &#125;</span><br><span class="line">        obj[item].count &gt; maxCount &amp;&amp; (maxCount = obj[item].count, maxItem = item)</span><br><span class="line">    &#125;)</span><br><span class="line">    return &#123;item:maxItem,count:maxCount&#125;</span><br><span class="line">    // return maxItem </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="返回一个键盘-很牛b，目前没看懂，感觉是看不懂了"><a href="#返回一个键盘-很牛b，目前没看懂，感觉是看不懂了" class="headerlink" title="返回一个键盘(很牛b，目前没看懂，感觉是看不懂了)"></a>返回一个键盘(很牛b，目前没看懂，感觉是看不懂了)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(_=&gt;[...&quot;`1234567890-=~~QWERTYUIOP[]\\~ASDFGHJKL;&apos;~~ZXCVBNM,./~&quot;].map(x=&gt;(o+=`/$&#123;b=&apos;_&apos;.repeat(w=x&lt;y?2:&apos; 667699&apos;[x=[&quot;BS&quot;,&quot;TAB&quot;,&quot;CAPS&quot;,&quot;ENTER&quot;][p++]||&apos;SHIFT&apos;,p])&#125;\\|`,m+=y+(x+&apos;    &apos;).slice(0,w)+y+y,n+=y+b+y+y,l+=&apos; __&apos;+b)[73]&amp;&amp;(k.push(l,m,n,o),l=&apos;&apos;,m=n=o=y),m=n=o=y=&apos;|&apos;,p=l=k=[])&amp;&amp;k.join`</span><br><span class="line">`)()</span><br></pre></td></tr></table></figure><hr><p>说明： 先说声抱歉，有部分方法是摘录的，具体忘记了出处[😅]，很早收集的，现在玩博客了想着搞点干的，如有博主自己看到相同的，可下面评论出处[🙏]，以便修正，禁止转的可下</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;移除类&quot;&gt;&lt;a href=&quot;#移除类&quot; class=&quot;headerlink&quot; title=&quot;移除类&quot;&gt;&lt;/a&gt;移除类&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s
      
    
    </summary>
    
    
      <category term="javaScript" scheme="http://haocaiMP.github.io/blog/tags/javaScript/"/>
    
  </entry>
  
  <entry>
    <title>数组去重</title>
    <link href="http://haocaiMP.github.io/blog/2019/05/30/array%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/"/>
    <id>http://haocaiMP.github.io/blog/2019/05/30/array数组去重/</id>
    <published>2019-05-30T10:44:10.000Z</published>
    <updated>2019-05-30T10:06:29.137Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a><center><b>数组去重</b></center></h2><h3 id="数组去重是我们工作和学习中经常遇到的问题，我在这里总结几个常用的写法"><a href="#数组去重是我们工作和学习中经常遇到的问题，我在这里总结几个常用的写法" class="headerlink" title="数组去重是我们工作和学习中经常遇到的问题，我在这里总结几个常用的写法"></a>数组去重是我们工作和学习中经常遇到的问题，我在这里总结几个常用的写法</h3><h3 id="最基本排序-indexOf"><a href="#最基本排序-indexOf" class="headerlink" title="最基本排序(indexOf)"></a>最基本排序(indexOf)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">* 根据数组indexOf方法判断数据是否存在（不存在为-1）</span><br><span class="line">* indexOf IE8 以下不支持</span><br><span class="line">* */</span><br><span class="line">function unique(arr)&#123;</span><br><span class="line">  var n=[];</span><br><span class="line">  for (var i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">    if(n.indexOf(arr[i])==-1)&#123;</span><br><span class="line">      n.push(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="先排序-再相邻比较"><a href="#先排序-再相邻比较" class="headerlink" title="先排序 再相邻比较"></a>先排序 再相邻比较</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">* 给传入数组排序，排序后相同值相邻，</span><br><span class="line">* 然后遍历时,新数组只加入不与前一值重复的值。</span><br><span class="line">* 会打乱原来数组的顺序</span><br><span class="line">* */</span><br><span class="line">function unique1(arr) &#123;</span><br><span class="line">  arr.sort();</span><br><span class="line">  var n = [arr[0]];</span><br><span class="line">  for (var i = 1; i &lt; arr.length; i++) &#123;</span><br><span class="line">      if (arr[i] !== n[n.length - 1]) &#123;</span><br><span class="line">          n.push(arr[i]);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="双层循环"><a href="#双层循环" class="headerlink" title="双层循环"></a>双层循环</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function unique2(arr)&#123;</span><br><span class="line">  var n=[];</span><br><span class="line">  for (var i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">    for (var j = i+1; j &lt; arr.length; j++) &#123;</span><br><span class="line">      if(arr[i]===arr[j])&#123;</span><br><span class="line">        ++i;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    n.push(arr[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  return n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用fliter去重"><a href="#使用fliter去重" class="headerlink" title="使用fliter去重"></a>使用fliter去重</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function unique(arr) &#123;</span><br><span class="line">  return arr.filter(function(item, index, arr) &#123;</span><br><span class="line">    //当前元素，在原始数组中的第一个索引==当前索引值，否则返回当前元素</span><br><span class="line">    return arr.indexOf(item, 0) === index;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="es6"><a href="#es6" class="headerlink" title="es6"></a>es6</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function unique(arr) &#123;</span><br><span class="line">  return Array.from(new Set(arr))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;数组去重&quot;&gt;&lt;a href=&quot;#数组去重&quot; class=&quot;headerlink&quot; title=&quot;数组去重&quot;&gt;&lt;/a&gt;&lt;center&gt;&lt;b&gt;数组去重&lt;/b&gt;&lt;/center&gt;&lt;/h2&gt;&lt;h3 id=&quot;数组去重是我们工作和学习中经常遇到的问题，我在这里总结几个常用的写
      
    
    </summary>
    
    
      <category term="javaScript" scheme="http://haocaiMP.github.io/blog/tags/javaScript/"/>
    
  </entry>
  
  <entry>
    <title>阅读javaScript数据结构与算法随笔</title>
    <link href="http://haocaiMP.github.io/blog/2019/05/22/%E9%98%85%E8%AF%BBjavaScript%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E9%9A%8F%E7%AC%94/"/>
    <id>http://haocaiMP.github.io/blog/2019/05/22/阅读javaScript数据结构与算法随笔/</id>
    <published>2019-05-22T10:26:10.000Z</published>
    <updated>2019-05-30T10:06:27.516Z</updated>
    
    <content type="html"><![CDATA[<h2 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a><center><strong>随笔</strong></center></h2><p>使用类进行面向对象开发 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class Book &#123;</span><br><span class="line">  constructor (title, pages, isbn) &#123;</span><br><span class="line">    this.title = title;</span><br><span class="line">    this.pages = pages;</span><br><span class="line">    this.isbn = isbn;</span><br><span class="line">  &#125;</span><br><span class="line">  printIsbn()&#123;</span><br><span class="line">    console.log(this.isbn);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">只需要使用class关键字，声明一个有constructor函数和诸如printIsbn等其他函数的类</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">class ITBook extends Book &#123;</span><br><span class="line">  constructor (title, pages, isbn, technology) &#123;</span><br><span class="line">    super(title, pages, isbn);</span><br><span class="line">    this.technology = technology;</span><br><span class="line">  &#125;</span><br><span class="line">  printTechnology()&#123;</span><br><span class="line">    console.log(this.technology);</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br><span class="line">我们可以用extends关键字扩展一个类并继承它的行为。在构造函数中，我们可以通过super关键字引用父类的构造函数</span><br></pre></td></tr></table></figure><h2 id="栈-后进先出"><a href="#栈-后进先出" class="headerlink" title="栈  后进先出"></a>栈  后进先出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">let Stack = (function () &#123;</span><br><span class="line">  const items = new WeakMap();</span><br><span class="line">  class Stack &#123;</span><br><span class="line">    constructor () &#123;</span><br><span class="line">      items.set(this, []);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  push(element) &#123;</span><br><span class="line">    let s = items.get(this);</span><br><span class="line">    s.push(element);</span><br><span class="line">  &#125;</span><br><span class="line">  pop() &#123;</span><br><span class="line">    let s = items.get(this);</span><br><span class="line">    let r = s.pop();</span><br><span class="line">    return r;</span><br><span class="line">  &#125;</span><br><span class="line">  isEmpty() &#123;</span><br><span class="line">    let s = items.get(this);</span><br><span class="line">    return s.length == 0</span><br><span class="line">  &#125;</span><br><span class="line">  size() &#123;</span><br><span class="line">    let s = items.get(this);</span><br><span class="line">    return s.length</span><br><span class="line">  &#125;</span><br><span class="line">  clear() &#123;</span><br><span class="line">    let s = items.get(this);</span><br><span class="line">    s.length = 0;</span><br><span class="line">    // s = []</span><br><span class="line">  &#125;</span><br><span class="line">  return Stack;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id="队-先进先出"><a href="#队-先进先出" class="headerlink" title="队  先进先出"></a>队  先进先出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">let Queue2 = (function () &#123;</span><br><span class="line">  const items = new WeakMap();</span><br><span class="line">  class Queue2 &#123;</span><br><span class="line">    constructor () &#123;</span><br><span class="line">      items.set(this, []);</span><br><span class="line">    &#125;</span><br><span class="line">    enqueue(element) &#123;</span><br><span class="line">      let q = items.get(this);</span><br><span class="line">      q.push(element);</span><br><span class="line">    &#125;</span><br><span class="line">    dequeue() &#123;</span><br><span class="line">      let q = items.get(this);</span><br><span class="line">      let r = q.shift();</span><br><span class="line">      return r;</span><br><span class="line">    &#125;</span><br><span class="line">    front() &#123;</span><br><span class="line">      let q = items.get(this);</span><br><span class="line">      return q[0]</span><br><span class="line">    &#125;</span><br><span class="line">    isEmpty() &#123;</span><br><span class="line">      let q = items.get(this);</span><br><span class="line">      return q.length == 0</span><br><span class="line">    &#125;</span><br><span class="line">    size() &#123;</span><br><span class="line">      let q = items.get(this);</span><br><span class="line">      return q.length</span><br><span class="line">    &#125;</span><br><span class="line">    print() &#123;</span><br><span class="line">      let q = items.get(this);</span><br><span class="line">      console.log(q.toString())</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return Queue2;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">class Agg &#123;</span><br><span class="line">  constructor() &#123;</span><br><span class="line">    this.items = &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">  has(value) &#123;</span><br><span class="line">    return this.items.hasOwnProperty(value)</span><br><span class="line">  &#125;</span><br><span class="line">  add(balue) &#123;</span><br><span class="line">    if(!this.has(value)) &#123;        // 对于给定的value，可以检查它是否存在于集合中</span><br><span class="line">      this.items[value] = value  </span><br><span class="line">      return true           // 如果不存在，就把value添加到集合中，返回true，表示添加了这个值</span><br><span class="line">    &#125;</span><br><span class="line">    return false          // 如果集合中已经有这个值，就返回false，表示没有添加它</span><br><span class="line">  &#125;</span><br><span class="line">  remove(value) &#123;</span><br><span class="line">    if(this.has(value)) &#123;  // 对于给定的value，可以检查它是否存在于集合中</span><br><span class="line">      delete this.items[value]  </span><br><span class="line">      return true          // 如果存在，就从集合中移除value，返回true，表示值被移除</span><br><span class="line">    &#125;</span><br><span class="line">    return false           // 反之</span><br><span class="line">  &#125;</span><br><span class="line">  clear() &#123;</span><br><span class="line">    this.items = &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">  size6() &#123;</span><br><span class="line">    return Object.keys(this.items).length    // es6</span><br><span class="line">  &#125;</span><br><span class="line">  size5() &#123;</span><br><span class="line">    let count = 0;                           // es5</span><br><span class="line">    for(let key in this.items) &#123;</span><br><span class="line">      if(this.items.hasOwnProperty(key))</span><br><span class="line">        ++count</span><br><span class="line">    &#125;</span><br><span class="line">    return count</span><br><span class="line">  &#125;</span><br><span class="line">  values6() &#123;                              // es6</span><br><span class="line">    let values = [];</span><br><span class="line">    for (let i=0, keys=Object.keys(this.items); i&lt;keys.length; i++) &#123;</span><br><span class="line">      values.push(this.items[keys[i]]);</span><br><span class="line">    &#125;</span><br><span class="line">    return values;</span><br><span class="line">  &#125;</span><br><span class="line">  values5() &#123;                              // es5</span><br><span class="line">    let values = [];</span><br><span class="line">    for(let key in this.items) &#123; </span><br><span class="line">      if(this.items.hasOwnProperty(key)) &#123; </span><br><span class="line">        values.push(this.items[key]);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return values;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="集合操作"><a href="#集合操作" class="headerlink" title="集合操作"></a>集合操作</h2><h3 id="并集"><a href="#并集" class="headerlink" title="并集"></a>并集</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">let union = function(otherSet)&#123;</span><br><span class="line">  let unionSet = new Agg(); </span><br><span class="line">  let values = this.values(); </span><br><span class="line">  for (let i=0; i&lt;values.length; i++)&#123;</span><br><span class="line">    unionSet.add(values[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  values = otherSet.values(); </span><br><span class="line">  for (let i=0; i&lt;values.length; i++)&#123;</span><br><span class="line">    unionSet.add(values[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  return unionSet;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">let setA = new Set([1,2,3])       // es6 </span><br><span class="line">let setB = new Set([2,3,4])</span><br><span class="line">let unionES6= new Set(); </span><br><span class="line">for (let x of setA) unionES6.add(x); </span><br><span class="line">for (let x of setB) unionES6.add(x);</span><br></pre></td></tr></table></figure><h3 id="交集"><a href="#交集" class="headerlink" title="交集"></a>交集</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">let intersection = function(otherSet)&#123;</span><br><span class="line">  let intersectionSet = new Agg(); </span><br><span class="line">  let values = this.values();</span><br><span class="line">  for (let i=0; i&lt;values.length; i++)&#123; </span><br><span class="line">    if (otherSet.has(values[i])) &#123;</span><br><span class="line">      intersectionSet.add(values[i]); </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return intersectionSet;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let setA = new Set([1,2,3])        // es6 </span><br><span class="line">let setB = new Set([2,3,4])       </span><br><span class="line">let intersectionES6 = function(setA, setB) &#123;</span><br><span class="line">  let intersectionSet = new Set();</span><br><span class="line">  for (let x of setA) &#123;</span><br><span class="line">    if (setB.has(x)) &#123; </span><br><span class="line">      intersectionSet.add(x);</span><br><span class="line">    &#125; </span><br><span class="line">  &#125;</span><br><span class="line">  return intersectionSet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="差集"><a href="#差集" class="headerlink" title="差集"></a>差集</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">let difference = function(otherSet)&#123;</span><br><span class="line">  let differenceSet = new Agg(); </span><br><span class="line">  let values = this.values();</span><br><span class="line">  for (let i=0; i&lt;values.length; i++)&#123; </span><br><span class="line">    if (!otherSet.has(values[i]))&#123;   </span><br><span class="line">      differenceSet.add(values[i]); </span><br><span class="line">    &#125; </span><br><span class="line">  &#125;</span><br><span class="line">  return differenceSet;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">let setA = new Set([1,2,3])        // es6 </span><br><span class="line">let setB = new Set([2,3,4])       </span><br><span class="line">let difference = function(setA, setB) &#123;</span><br><span class="line">  let differenceSet = new Set();</span><br><span class="line">  for (let x of setA) &#123;</span><br><span class="line">    if (!setB.has(x)) &#123; </span><br><span class="line">    &#125; </span><br><span class="line">  &#125;</span><br><span class="line">  return differenceSet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="子集"><a href="#子集" class="headerlink" title="子集"></a>子集</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">let subset = function(otherSet)&#123;</span><br><span class="line">  if (this.size() &gt; otherSet.size())&#123; </span><br><span class="line">    return false;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    let values = this.values();</span><br><span class="line">    for (let i=0; i&lt;values.length; i++)&#123; </span><br><span class="line">      if (!otherSet.has(values[i]))&#123; </span><br><span class="line">        return false;</span><br><span class="line">      &#125; </span><br><span class="line">    &#125;</span><br><span class="line">      return true; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;随笔&quot;&gt;&lt;a href=&quot;#随笔&quot; class=&quot;headerlink&quot; title=&quot;随笔&quot;&gt;&lt;/a&gt;&lt;center&gt;&lt;strong&gt;随笔&lt;/strong&gt;&lt;/center&gt;&lt;/h2&gt;&lt;p&gt;使用类进行面向对象开发 &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Book &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  constructor (title, pages, isbn) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this.title = title;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this.pages = pages;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this.isbn = isbn;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  printIsbn()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(this.isbn);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;只需要使用class关键字，声明一个有constructor函数和诸如printIsbn等其他函数的类&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="javaScript" scheme="http://haocaiMP.github.io/blog/tags/javaScript/"/>
    
  </entry>
  
</feed>
